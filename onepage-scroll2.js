// Generated by CoffeeScript 1.7.1
(function() {
  var OnePageScroll,
    __slice = [].slice;

  $.fn.swipeEvents = function() {
    var $this, startX, startY, touchMove, touchStart;
    $this = $(this);
    startX = startY = 0;
    touchStart = function(e) {
      var touches, _ref;
      if (e != null) {
        e.preventDefault();
      }
      touches = e != null ? (_ref = e.originalEvent) != null ? _ref.touches : void 0 : void 0;
      if (!(touches != null ? touches.length : void 0)) {
        return;
      }
      startX = touches[0].pageX;
      startY = touches[0].pageY;
      $this.off('touchmove', touchMove);
      return $this.on('touchmove', touchMove);
    };
    touchMove = function(e) {
      var deltaX, deltaY, touches, trigger, _ref;
      if (e != null) {
        e.preventDefault();
      }
      touches = e != null ? (_ref = e.originalEvent) != null ? _ref.touches : void 0 : void 0;
      if (!(touches != null ? touches.length : void 0)) {
        return;
      }
      deltaX = startX - touches[0].pageX;
      deltaY = startY - touches[0].pageY;
      trigger = function(name) {
        $this.trigger(name);
        return $this.unbind('touchmove', touchMove);
      };
      if (deltaX >= 50) {
        trigger('swipeLeft');
      }
      if (deltaX <= -50) {
        trigger('swipeRight');
      }
      if (deltaY >= 50) {
        trigger('swipeUp');
      }
      if (deltaY <= -50) {
        return trigger('swipeDown');
      }
    };
    return $this.on('touchstart', touchStart);
  };

  OnePageScroll = (function() {
    OnePageScroll.prototype._default_options = {
      sectionContainer: "section.row",
      pageListContainer: "body",
      easing: "ease",
      animationTime: 700,
      quietPeriod: 500,
      loop: false,
      keyboard: true,
      pagination: true
    };

    function OnePageScroll(options, el) {
      this.options = $.extend({}, this._default_options, options);
      this.currentIndex = 0;
      this.$el = $(el);
      this.$sections = this.$el.find(this.options.sectionContainer);
      this.isScrolling = false;
      this.sections = this._buildSections();
      this._bindEvents();
      this._positionSections();
      if (this.options.pagination) {
        this.$pageList = this._buildPageList();
      }
    }

    OnePageScroll.prototype._buildSections = function() {
      var section, _i, _len, _ref, _results;
      _ref = this.$sections;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        section = _ref[_i];
        _results.push({
          $el: $(section),
          id: $(section).attr('id')
        });
      }
      return _results;
    };

    OnePageScroll.prototype._bindEvents = function() {
      this.$el.swipeEvents().bind('swipeDown', (function(_this) {
        return function() {
          return _this.moveUp();
        };
      })(this)).bind('swipeUp', (function(_this) {
        return function() {
          return _this.moveDown();
        };
      })(this));
      if (this.options.keyboard) {
        $(document).keydown((function(_this) {
          return function(e) {
            var tag, _ref, _ref1;
            tag = e != null ? (_ref = e.target) != null ? (_ref1 = _ref.tagName) != null ? _ref1.toLowerCase() : void 0 : void 0 : void 0;
            if (tag === 'input' || tag === 'textarea') {
              return;
            }
            switch (e.which) {
              case 38:
              case 33:
                _this.moveUp();
                break;
              case 40:
              case 34:
                _this.moveDown();
                break;
              case 36:
                _this.moveToIndex(0);
                break;
              case 35:
                _this.moveToIndex(_this.sections.length - 1);
                break;
              default:
                return;
            }
            return e.preventDefault();
          };
        })(this));
      }
      return $(document).bind('mousewheel DOMMouseScroll', (function(_this) {
        return function(e) {
          var delta;
          if (e != null) {
            e.preventDefault();
          }
          delta = e.originalEvent.wheelDelta || -e.originalEvent.detail;
          if (!_this.isScrolling) {
            if (delta < 0) {
              return _this.moveDown();
            } else {
              return _this.moveUp();
            }
          }
        };
      })(this));
    };

    OnePageScroll.prototype._positionSections = function() {
      var section, topPos, _i, _len, _ref, _results;
      topPos = 0;
      this.$el.addClass('onepage-wrapper').css('position', 'relative');
      _ref = this.sections;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        section = _ref[_i];
        section.$el.addClass('section').css({
          position: 'absolute',
          top: "" + topPos + "%"
        });
        _results.push(topPos += 100);
      }
      return _results;
    };

    OnePageScroll.prototype._buildPageList = function() {
      var $ul, idx, _fn, _i, _ref;
      $ul = $("<ul></ul>").addClass('onepage-pagination');
      _fn = (function(_this) {
        return function(idx) {
          var $a, $li;
          $a = $("<a></a>").click(function(e) {
            e.preventDefault();
            return _this._goToIndex(idx);
          });
          $li = $("<li></li>");
          $li.append($a);
          return $ul.append($li);
        };
      })(this);
      for (idx = _i = 0, _ref = this.sections.length; 0 <= _ref ? _i < _ref : _i > _ref; idx = 0 <= _ref ? ++_i : --_i) {
        _fn(idx);
      }
      $ul.appendTo($(this.options.pageListContainer));
      $ul.find('li:first-of-type a').addClass('active');
      return $ul;
    };

    OnePageScroll.prototype._goToIndex = function(index) {
      var pos, prefix, styles, _base, _i, _len, _ref;
      if (this.isScrolling || index === this.currentIndex) {
        return;
      }
      styles = {};
      pos = -100 * index;
      _ref = ['-webkit-', '-moz-', '-ms-', ''];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        prefix = _ref[_i];
        styles["" + prefix + "transform"] = "translateY(" + pos + "%)";
        styles["" + prefix + "transition"] = "all " + this.options.animationTime + "ms " + this.options.easing;
      }
      this.isScrolling = true;
      if (typeof (_base = this.options).beforeMove === "function") {
        _base.beforeMove(index);
      }
      if (this.options.pagination) {
        this.$pageList.find('li a.active').removeClass('active');
        $(this.$pageList.find('li a').get(index)).addClass('active');
      }
      return this.$el.css(styles).one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', (function(_this) {
        return function() {
          var _base1;
          _this.currentIndex = index;
          if (typeof (_base1 = _this.options).afterMove === "function") {
            _base1.afterMove(index);
          }
          return setTimeout((function() {
            return _this.isScrolling = false;
          }), _this.options.quietPeriod);
        };
      })(this));
    };

    OnePageScroll.prototype._getIndexForSectionById = function(id) {
      var i, _i, _ref;
      for (i = _i = 0, _ref = this.sections.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        if (this.sections[i].id === id) {
          return i;
        }
      }
      return -1;
    };

    OnePageScroll.prototype.moveDown = function() {
      var nextIndex;
      nextIndex = this.currentIndex + 1;
      if (!this.sections[nextIndex]) {
        if (!this.options.loop) {
          return;
        }
        nextIndex = 0;
      }
      return this._goToIndex(nextIndex);
    };

    OnePageScroll.prototype.moveUp = function() {
      var nextIndex;
      nextIndex = this.currentIndex - 1;
      if (!this.sections[nextIndex]) {
        if (!this.options.loop) {
          return;
        }
        nextIndex = this.sections.length - 1;
      }
      return this._goToIndex(nextIndex);
    };

    OnePageScroll.prototype.moveToIndex = function(index) {
      if (!this.sections[index]) {
        return;
      }
      return this._goToIndex(index);
    };

    OnePageScroll.prototype.moveToSectionWithId = function(id) {
      var index;
      index = this._getIndexForSectionById(id);
      return this.moveToIndex(index);
    };

    return OnePageScroll;

  })();

  $.fn.onePageScroll2 = function() {
    var $this, arg0, onePageScroll, splat;
    arg0 = arguments[0], splat = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
    $this = $(this);
    onePageScroll = $this.data('onePageScroll');
    if (!onePageScroll) {
      onePageScroll = new OnePageScroll((typeof arg0 === 'object' ? arg0 : {}), $this);
      $this.data('onePageScroll', onePageScroll);
    }
    if (typeof arg0 === 'string' && arg0.substr(0, 1) !== '_') {
      if (typeof onePageScroll[arg0] === "function") {
        onePageScroll[arg0].apply(onePageScroll, splat);
      }
    }
    return $this;
  };

}).call(this);

//# sourceMappingURL=onepage-scroll2.map
